<!-- 실습1 -->
<!DOCTYPE html>
<html lang="en">
  <body>
    <script
      src="https://unpkg.com/react@18/umd/react.development.js"
      crossorigin
    ></script>
    <script
      src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
      crossorigin
    ></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <div id="root"></div>
    <script type="text/babel">
      // react
      const rootElement = document.getElementById("root");

      const state = { name: "button", color: "pink" };

      function Button({ props }) {
        console.log("props", props);
        return (
          <button style={{ backgroundColor: props.color }}>
            {props.color}
            {props.name}
          </button>
        );
      }

      const Buttons = () => (
        <>
          <button style={{ backgroundColor: state.color }}>
            {state.color + state.name}
          </button>
          <Button props={state} />
        </>
      );

      ReactDOM.render(Buttons(), rootElement);
    </script>
  </body>
</html>


<!-- 실습2 -->
<!DOCTYPE html>
<html lang="en">
  <body>
    <script
      src="https://unpkg.com/react@18/umd/react.development.js"
      crossorigin
    ></script>
    <script
      src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
      crossorigin
    ></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <div id="root"></div>
    <script type="text/babel">
      // react
      const rootElement = document.getElementById("root");

      const state = { name: "button", color: "pink" };

      function Button({ name, color }) {
        //console.log("props", props);
        return (
          <button style={{ backgroundColor: color }}>
            {color}
            {name}
          </button>
        );
      }

      const Buttons = () => (
        <>
          <button style={{ backgroundColor: state.color }}>
            {state.color + state.name}
          </button>
          <Button name={state.name} color={state.color} />
        </>
      );

      ReactDOM.render(Buttons(), rootElement);
    </script>
  </body>
</html>

<!-- 실습3 : usestate 사용-->
<!DOCTYPE html>
<html lang="en">
  <body>
    <script
      src="https://unpkg.com/react@18/umd/react.development.js"
      crossorigin
    ></script>
    <script
      src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"
      crossorigin
    ></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <div id="root"></div>
    <script type="text/babel">
      // react
      const rootElement = document.getElementById("root");

      const state = { name: "button", color: "pink" };

      function Button() {
        //console.log("props", props);
        const [color, setColor] = React.useState("green");
        const [name, setName] = React.useState("button");

        return (
          <button style={{ backgroundColor: color }}>
            {color}
            {name}
          </button>
        );
      }

      const Buttons = () => (
        <>
          <button style={{ backgroundColor: state.color }}>
            {state.color + state.name}
          </button>
          <Button name={state.name} color={state.color} />
        </>
      );

      ReactDOM.render(Buttons(), rootElement);
    </script>
  </body>
</html>
